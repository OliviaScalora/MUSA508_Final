correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, countoverdose, use = "complete.obs"))
ggplot(correlation.long, aes(Value, countoverdose)) +
geom_point(size = 1, color = '#223843') +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 5, scales = "free") +
labs(title = "Narcotics Incidents count as a function of risk factors",
caption = "figure 6.1") +
plotTheme()+theme(strip.text.x = element_text(size = 10),
strip.background = element_rect(fill= '#f0efeb', color=NA))
numericVars <-
select_if(st_drop_geometry(final_net), is.numeric) %>% na.omit()
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#40042d", "#f0efeb", "#f7580f"),
type="lower",
insig = "blank") +
labs(title = "Correlation across numeric variables",
caption = 'figure 6.2')+theme(panel.background = element_rect(fill = "#f0efeb", color = "#f0efeb"),
legend.background = element_rect(fill="#f0efeb", color = "#f0efeb"),
plot.background = element_rect(fill = "#f0efeb", color = "#f0efeb"),
legend.text = element_text(color='#2b2005'),
legend.title = element_text(color = '#2b2005'),
plot.title = element_text(color = '#2b2005', size = 22),
panel.grid = element_blank(),
plot.margin= margin(1,1,1,1, unit = 'cm'))
final_net %>%
ggplot(aes(countoverdose,))+
geom_histogram(bins = 10, colour="black", fill = '#f69c73') +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
scale_y_continuous(breaks = seq(0,1500, by = 200))+
labs(title="Distribution of Overdose Occurances", subtitle = "Mesa, AZ",
x="Overdose Occurance Count", y="Frequency",
caption = "figure 7.") +plotTheme()+theme(panel.background = element_rect(fill = "#f0efeb", color = "#f0efeb"),
legend.background = element_rect(fill="#f0efeb", color = "#f0efeb"),
plot.background = element_rect(fill = "#f0efeb", color = "#f0efeb"),
panel.border = element_blank(),
legend.text = element_text(color='#2b2005'),
legend.title = element_text(color = '#2b2005'),
plot.title = element_text(color = '#2b2005', size = 22),
panel.grid = element_blank())
#### K-fold
#Just Risk Factors
reg.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
View(reg.CV)
#Spatial Process
reg.ss.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
#Just Risk Factors
reg.vars <- c("Commercial", "High.Density.Residential", "Low.Density.Residential",  "Downtown",
"Park.nn", "Arts.and.Education.nn", "Police.Fire.nn", "Public.Housing", "Vacant.Property", "Low.Income", "Low.Rent",
"Majority.White", "Majority.Hispanic","Child.Crisis.Center", "Industrial", "misdemeanor", "felony", "lightrail")
#Include Local Moran's I Statistic
reg.ss.vars <- c("Commercial", "High.Density.Residential", "Low.Density.Residential", "Downtown",
"Park.nn", "Arts.and.Education.nn", "Police.Fire.nn", "Public.Housing", "Vacant.Property", "Low.Income", "Low.Rent",
"Majority.White", "Majority.Hispanic","Child.Crisis.Center", "Industrial", "misdemeanor", "felony","lightrail", "overdose.isSig.dist", "overdose.isSig")
#### K-fold
#Just Risk Factors
reg.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
#Spatial Process
reg.ss.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
## generates warnings from PROJ issues
## {spdep} to make polygon to neighborhoods...
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
## .. and neighborhoods to list of weigths
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
#print(final_net.weights, zero.policy=TRUE)
## see ?localmoran
local_morans <- localmoran(final_net$countoverdose, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
final_net.localMorans <-
cbind(local_morans, as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(overdose_count = countoverdose,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.001, 1, 0)) %>%
gather(Variable, Value, -geometry)
vars <- unique(final_net.localMorans$Variable)
varList <- list()
for(i in vars){
varList[[i]] <-
ggplot() +
geom_sf(data = filter(final_net.localMorans, Variable == i),
aes(fill = Value), colour=NA) +
scale_fill_viridis(option = "F", direction = -1) +
labs(title=i) +
mapTheme()+ theme(legend.position="bottom",
legend.key.width = unit(.8, 'cm'))
}
final_net <- final_net %>%
mutate(overdose.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdose.isSig.dist =
nn_function(st_coordinates(st_centroid(final_net)),
st_coordinates(st_centroid(filter(final_net,
overdose.isSig == 1))),k = 1))
final_net.long <-
gather(final_net, Variable, value, -geometry, -uniqueID)
do.call(grid.arrange,c(varList, ncol = 2, top = "figure 5.1: Local Morans I statistics, Mesa, AZ Overdose Incidents"))
ggplot() +
geom_sf(data = filter(final_net.long, Variable == "overdose.isSig.dist"),
aes(fill=as.numeric(value)), colour=NA) +
scale_fill_viridis(option = 'F', direction = -1) +
labs(fill = 'Distance (ft)',
title= 'figure 5.2: Distance to Significant 2018 Overdose Hotspot',
subtitle = 'Mesa, AZ') +
mapTheme()+ theme(legend.position="bottom",
legend.key.width = unit(.8, 'cm'))
#----CORRELATION PLOTS----
#### for counts
correlation.long <-
st_drop_geometry(final_net) %>%
dplyr::select(-uniqueID, -cvID, -GEOID) %>%
gather(Variable, Value, -countoverdose)
##### for nn
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, countoverdose, use = "complete.obs"))
ggplot(correlation.long, aes(Value, countoverdose)) +
geom_point(size = 1, color = '#223843') +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 5, scales = "free") +
labs(title = "Narcotics Incidents count as a function of risk factors",
caption = "figure 6.1") +
plotTheme()+theme(strip.text.x = element_text(size = 10),
strip.background = element_rect(fill= '#f0efeb', color=NA))
numericVars <-
select_if(st_drop_geometry(final_net), is.numeric) %>% na.omit()
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#40042d", "#f0efeb", "#f7580f"),
type="lower",
insig = "blank") +
labs(title = "Correlation across numeric variables",
caption = 'figure 6.2')+theme(panel.background = element_rect(fill = "#f0efeb", color = "#f0efeb"),
legend.background = element_rect(fill="#f0efeb", color = "#f0efeb"),
plot.background = element_rect(fill = "#f0efeb", color = "#f0efeb"),
legend.text = element_text(color='#2b2005'),
legend.title = element_text(color = '#2b2005'),
plot.title = element_text(color = '#2b2005', size = 22),
panel.grid = element_blank(),
plot.margin= margin(1,1,1,1, unit = 'cm'))
final_net %>%
ggplot(aes(countoverdose,))+
geom_histogram(bins = 10, colour="black", fill = '#f69c73') +
scale_x_continuous(breaks = seq(0, 20, by = 2)) +
scale_y_continuous(breaks = seq(0,1500, by = 200))+
labs(title="Distribution of Overdose Occurances", subtitle = "Mesa, AZ",
x="Overdose Occurance Count", y="Frequency",
caption = "figure 7.") +plotTheme()+theme(panel.background = element_rect(fill = "#f0efeb", color = "#f0efeb"),
legend.background = element_rect(fill="#f0efeb", color = "#f0efeb"),
plot.background = element_rect(fill = "#f0efeb", color = "#f0efeb"),
panel.border = element_blank(),
legend.text = element_text(color='#2b2005'),
legend.title = element_text(color = '#2b2005'),
plot.title = element_text(color = '#2b2005', size = 22),
panel.grid = element_blank())
#Spatial Process
reg.ss.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
View(reg.ss.CV)
#### Spatial LOGO-CV
#Just Risk Factors
reg.spatialCV <- crossValidate(
dataset = final_net,
id = "GEOID",
dependentVariable = "countoverdose",
indVariables = reg.vars) %>%
dplyr::select(cvID = GEOID, countoverdose, Prediction, geometry)
View(reg.ss.spatialCV)
final_net <-
left_join(opioid_net, st_drop_geometry(vars_net), by="uniqueID")
final_net <-
st_centroid(final_net) %>%
st_join(dplyr::select(mesa_tracts18, GEOID), by = "uniqueID") %>%
st_drop_geometry() %>%
left_join(dplyr::select(final_net, geometry, uniqueID)) %>%
st_sf() %>%
na.omit()
View(final_net)
ggplot() +
geom_sf(data = filter(final_net.long, Variable == "overdose.isSig.dist"),
aes(fill=as.numeric(value)), colour=NA) +
scale_fill_viridis(option = 'F', direction = -1) +
labs(fill = 'Distance (ft)',
title= 'figure 5.2: Distance to Significant 2018 Overdose Hotspot',
subtitle = 'Mesa, AZ') +
mapTheme()+ theme(legend.position="bottom",
legend.key.width = unit(.8, 'cm'))
final_net <-
st_centroid(final_net) %>%
st_join(dplyr::select(mesa_tracts18, GEOID), by = "uniqueID") %>%
st_drop_geometry() %>%
left_join(dplyr::select(final_net, geometry, uniqueID)) %>%
st_sf() %>%
na.omit()
## define the variables we want
#Just Risk Factors
reg.vars <- c("Commercial", "High.Density.Residential", "Low.Density.Residential",
"Park.nn", "Arts.and.Education.nn", "Police.Fire.nn", "Public.Housing", "Vacant.Property", "Low.Income", "Low.Rent",
"Majority.White", "Majority.Hispanic","Child.Crisis.Center", "Industrial", "misdemeanor", "felony", "lightrail")
#Include Local Moran's I Statistic
reg.ss.vars <- c("Commercial", "High.Density.Residential", "Low.Density.Residential",
"Park.nn", "Arts.and.Education.nn", "Police.Fire.nn", "Public.Housing", "Vacant.Property", "Low.Income", "Low.Rent",
"Majority.White", "Majority.Hispanic","Child.Crisis.Center", "Industrial", "misdemeanor", "felony","lightrail", "overdose.isSig.dist", "overdose.isSig")
# "Downtown",
## RUN REGRESSIONS
#### K-fold
#Just Risk Factors
reg.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
#Spatial Process
reg.ss.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
final_net <- final_net %>%
mutate(overdose.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdose.isSig.dist =
nn_function(st_coordinates(st_centroid(final_net)),
st_coordinates(st_centroid(filter(final_net,
overdose.isSig == 1))),k = 1))
final_net.long <-
gather(final_net, Variable, value, -geometry, -uniqueID)
## define the variables we want
#Just Risk Factors
reg.vars <- c("Commercial", "High.Density.Residential", "Low.Density.Residential",
"Park.nn", "Arts.and.Education.nn", "Police.Fire.nn", "Public.Housing", "Vacant.Property", "Low.Income", "Low.Rent",
"Majority.White", "Majority.Hispanic","Child.Crisis.Center", "Industrial", "misdemeanor", "felony", "lightrail")
#Include Local Moran's I Statistic
reg.ss.vars <- c("Commercial", "High.Density.Residential", "Low.Density.Residential",
"Park.nn", "Arts.and.Education.nn", "Police.Fire.nn", "Public.Housing", "Vacant.Property", "Low.Income", "Low.Rent",
"Majority.White", "Majority.Hispanic","Child.Crisis.Center", "Industrial", "misdemeanor", "felony","lightrail", "overdose.isSig.dist", "overdose.isSig")
# "Downtown",
## RUN REGRESSIONS
#### K-fold
#Just Risk Factors
reg.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
#Spatial Process
reg.ss.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
#### Spatial LOGO-CV
#Just Risk Factors
reg.spatialCV <- crossValidate(
dataset = final_net,
id = "GEOID",
dependentVariable = "countoverdose",
indVariables = reg.vars) %>%
dplyr::select(cvID = GEOID, countoverdose, Prediction, geometry)
## generates warnings from PROJ issues
## {spdep} to make polygon to neighborhoods...
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
## .. and neighborhoods to list of weigths
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
#print(final_net.weights, zero.policy=TRUE)
## see ?localmoran
local_morans <- localmoran(final_net$countoverdose, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
# join local Moran's I results to fishnet
final_net.localMorans <-
cbind(local_morans, as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(overdose_count = countoverdose,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.001, 1, 0)) %>%
gather(Variable, Value, -geometry)
vars <- unique(final_net.localMorans$Variable)
varList <- list()
for(i in vars){
varList[[i]] <-
ggplot() +
geom_sf(data = filter(final_net.localMorans, Variable == i),
aes(fill = Value), colour=NA) +
scale_fill_viridis(option = "F", direction = -1) +
labs(title=i) +
mapTheme()+ theme(legend.position="bottom",
legend.key.width = unit(.8, 'cm'))
}
final_net <- final_net %>%
mutate(overdose.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdose.isSig.dist =
nn_function(st_coordinates(st_centroid(final_net)),
st_coordinates(st_centroid(filter(final_net,
overdose.isSig == 1))),k = 1))
final_net.long <-
gather(final_net, Variable, value, -geometry, -uniqueID)
#----MERGE ALL VARIABLES TO FISHNET----
vars_net<- cbind(point_vars_net,(st_drop_geometry(zone_vars_net)%>%
dplyr::select(-uniqueID)))
vars_net<- cbind(vars_net,(st_drop_geometry(point_vars_net.nn))%>%
dplyr::select(-uniqueID))
vars_net<- cbind(vars_net,(st_drop_geometry(census_vars_net))%>%
dplyr::select(-uniqueID))
vars_net<- cbind(vars_net,(st_drop_geometry(census_vars_net.nn))%>%
dplyr::select(-uniqueID))
vars_net<- cbind(vars_net,(st_drop_geometry(crime_vars_net))%>%
dplyr::select(-uniqueID))
final_net <-
left_join(opioid_net, st_drop_geometry(vars_net), by="uniqueID")
final_net <-
st_centroid(final_net) %>%
st_join(dplyr::select(mesa_tracts18, GEOID), by = "uniqueID") %>%
st_drop_geometry() %>%
left_join(dplyr::select(final_net, geometry, uniqueID)) %>%
st_sf() %>%
na.omit()
## generates warnings from PROJ issues
## {spdep} to make polygon to neighborhoods...
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
## .. and neighborhoods to list of weigths
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
#print(final_net.weights, zero.policy=TRUE)
## see ?localmoran
local_morans <- localmoran(final_net$countoverdose, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
# join local Moran's I results to fishnet
final_net.localMorans <-
cbind(local_morans, as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(overdose_count = countoverdose,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.001, 1, 0)) %>%
gather(Variable, Value, -geometry)
vars <- unique(final_net.localMorans$Variable)
varList <- list()
for(i in vars){
varList[[i]] <-
ggplot() +
geom_sf(data = filter(final_net.localMorans, Variable == i),
aes(fill = Value), colour=NA) +
scale_fill_viridis(option = "F", direction = -1) +
labs(title=i) +
mapTheme()+ theme(legend.position="bottom",
legend.key.width = unit(.8, 'cm'))
}
final_net <- final_net %>%
mutate(overdose.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdose.isSig.dist =
nn_function(st_coordinates(st_centroid(final_net)),
st_coordinates(st_centroid(filter(final_net,
overdose.isSig == 1))),k = 1))
final_net.long <-
gather(final_net, Variable, value, -geometry, -uniqueID)
## define the variables we want
#Just Risk Factors
reg.vars <- c("Commercial", "High.Density.Residential", "Low.Density.Residential",
"Park.nn", "Arts.and.Education.nn", "Police.Fire.nn", "Public.Housing", "Vacant.Property", "Low.Income", "Low.Rent",
"Majority.White", "Majority.Hispanic","Child.Crisis.Center", "Industrial", "misdemeanor", "felony", "lightrail")
#Include Local Moran's I Statistic
reg.ss.vars <- c("Commercial", "High.Density.Residential", "Low.Density.Residential",
"Park.nn", "Arts.and.Education.nn", "Police.Fire.nn", "Public.Housing", "Vacant.Property", "Low.Income", "Low.Rent",
"Majority.White", "Majority.Hispanic","Child.Crisis.Center", "Industrial", "misdemeanor", "felony","lightrail", "overdose.isSig.dist", "overdose.isSig")
# "Downtown",
## RUN REGRESSIONS
#### K-fold
#Just Risk Factors
reg.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
#Spatial Process
reg.ss.CV <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "countoverdose",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID, countoverdose, Prediction, geometry)
#### Spatial LOGO-CV
#Just Risk Factors
reg.spatialCV <- crossValidate(
dataset = final_net,
id = "GEOID",
dependentVariable = "countoverdose",
indVariables = reg.vars) %>%
dplyr::select(cvID = GEOID, countoverdose, Prediction, geometry)
#Spatial Process
reg.ss.spatialCV <- crossValidate(
dataset = final_net,
id = "GEOID",
dependentVariable = "countoverdose",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID = GEOID, countoverdose, Prediction, geometry)
#### bind
reg.summary <-
rbind(
mutate(reg.CV,        Error = Prediction - countoverdose,
Regression = "Random k-fold CV: Just Risk Factors"),
mutate(reg.ss.CV,        Error = Prediction - countoverdose,
Regression = "Random k-fold CV: Spatial Process"),
mutate(reg.spatialCV, Error = Prediction - countoverdose,
Regression = "Spatial LOGO-CV: Just Risk Factors"),
mutate(reg.ss.spatialCV, Error = Prediction - countoverdose,
Regression = "Spatial LOGO-CV: Spatial Process")) %>%
st_sf()
# calculate errors by Block Group
error_by_reg_and_fold <-
reg.summary  %>%
group_by(Regression, cvID) %>%
summarize(Mean_Error = mean(Prediction - countoverdose, na.rm = T),
MAE = mean(abs(Mean_Error), na.rm = T),
SD_MAE = mean(abs(Mean_Error), na.rm = T)) %>%
ungroup()
site<- rbind(Commercial, Downtown)
reg.ss.spatialCV%>%
ggplot() +
geom_sf(data=site, fill=NA, color = 'black', size = .5, alpha = .5)+
geom_sf(aes(fill = Prediction, colour = Prediction), alpha=.5)+
geom_sf(data=city_boundary, fill = NA)+
scale_fill_viridis(option = "F", direction = -1) +
scale_colour_viridis(option = "F", direction = -1)+
labs(title='Predictions',subtitle='Spatial LOGO-CV: Spatial Process')+
mapTheme()+theme(panel.border=element_blank(),legend.position = "bottom",legend.key.size = unit(.5, 'cm'))
OOTC.site<- st_join(site, reg.ss.spatialCV, join=st_intersects)%>%filter(Prediction > 1)
st_write(OOTC.site, paste0('C:/Users/oscal/Documents/UpennMUSA/Semester_1/Public Policy Lab', "/", "OOTC.site.shp"))
st_write(city_boundary, paste0('C:/Users/oscal/Documents/UpennMUSA/Semester_1/Public Policy Lab', "/", "city_boundary.shp"))
st_write(reg.ss.spatialCV, paste0('C:/Users/oscal/Documents/UpennMUSA/Semester_1/Public Policy Lab', "/", "pred.shp"))
grid.arrange(
reg.summary%>%filter(Regression == "Spatial LOGO-CV: Just Risk Factors")%>%
ggplot() + geom_sf(aes(fill = Prediction, colour = Prediction))+
scale_fill_viridis(option = "F", direction = -1) +
scale_colour_viridis(option = "F", direction = -1)+
labs(title='Spatial LOGO-CV: \nJust Risk Factors',
caption = 'figure 11.')+mapTheme()+theme(panel.border=element_blank(),
title = element_text(size = 12),
legend.position = "bottom",
legend.key.size = unit(.5, 'cm')),
reg.summary%>%filter(Regression == "Spatial LOGO-CV: Spatial Process")%>%
ggplot() + geom_sf(aes(fill = Prediction, colour = Prediction))+
scale_fill_viridis(option = "F", direction = -1) +
scale_colour_viridis(option = "F", direction = -1)+
labs(title='Spatial LOGO-CV: \nSpatial Process')+mapTheme()+theme(panel.border=element_blank(),
title = element_text(size = 12),
legend.position = "bottom",
legend.key.size = unit(.5, 'cm')),
ggplot() +
geom_sf(data = reg.summary, aes(fill = countoverdose, colour = countoverdose))+
scale_fill_viridis(option = "F", direction = -1) +
scale_colour_viridis(option = "F", direction = -1)+
labs(title='Observed \nOverdoses')+mapTheme()+theme(panel.border=element_blank(),
title = element_text(size = 12),
legend.position = "bottom",
legend.key.size = unit(.5, 'cm')), nrow=1)
st_drop_geometry(reg.summary) %>%
group_by(Regression) %>%
mutate(overdose_Decile = ntile(countoverdose, 10)) %>%
group_by(Regression, overdose_Decile) %>%
summarize(meanObserved = mean(countoverdose, na.rm=T),
meanPrediction = mean(Prediction, na.rm=T)) %>%
gather(Variable, Value, -Regression, -overdose_Decile) %>%
ggplot(aes(overdose_Decile, Value, shape = Variable)) +
geom_point(size = 2) + geom_path(aes(group = overdose_Decile), colour = "black") +
scale_shape_manual(values = c(2, 17)) +
facet_wrap(~Regression) + xlim(0,10) +
labs(title = "Predicted and observed overdose by observed overdose decile",
caption = 'figure 12.')  +
plotTheme()+theme(strip.text.x = element_text(size = 10),
strip.background = element_rect(fill= '#f0efeb', color=NA))
